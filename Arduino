#define LEN 1000

int fs[LEN + 1];             //function signal
int lfs = 0;                 //last function signal

int tl = 10;                 //triggerlevel
boolean trigger;            //true up false down

int i = LEN;
int j = LEN;

char mPoint[] = "000";
char pin;                    //processing input

boolean s = false;        //start   

boolean cont = true;        //continue     
int output = 0; 
void setup() {
ADCSRA = (1 << ADEN) | (1 << ADPS2);         //ADEN enable ADC
ADMUX = (1 << REFS0) | (1 << ADLAR);         //5V Referenz spg

Serial.begin(9600);

  TCNT1 = TCCR1A = TCCR1B = 0;
  TCCR1B = 1 << WGM12;
  TCCR1B |= (1 << CS10);
  OCR1A = 1000;
  TIMSK1 |= 1 << OCIE1A;
  sei();
}

void loop() {
  if(Serial.available() > 0 )
  { 
   pin = Serial.read(); 

switch(pin)
{
  case 'S': 
  {
    s = true;
   // i = 0;
   // j = 0;
   cont = true;
    break;
  }
  case 'T':
  {
    while(cont == true)
    {
      if(Serial.available() > 0 )
      { 
        tl = Serial.parseInt();

       String a = Serial.readStringUntil('E');
        if(a == "true")
        {
          trigger = true;
          output = 150;
         cont = false;
        }
        else if(a == "false")
        {
          trigger = false;
          output = 70;
         cont = false; 
        }
      }
     }
     break;
  }
}
   
   // i = 0; 
   // j = 0;
      
  }

  while (j < i)
  {
       
   Serial.println(fs[j]);
    UDR0 = 10;
    UDR0 = 0;
      j++;
    
  }
}

ISR(TIMER1_COMPA_vect)
{
      fs[i] = ADCH;
      //fs[i] = sin(i * 0.02) * 100 + 5; 
  if (i < LEN)
  { 
    i++;
//     fs[i] = tl;
//fs[i] = sin(i * 0.02) * 100 + 5; 
//if (i >= LEN && j >= LEN) j = 0;
  }
  else if(i >= LEN && s == true)
  {
  if(trigger == true)
  {
    if(lfs <= tl && fs[i] >= tl) 
    {
      i = 0;
      j = 0;
      s = false;
    }
  }
  else if(trigger == false)
  {
     if(lfs >= tl && fs[i] <= tl) 
    {
      i = 0;
      j = 0;
      s = false;
    }
  }
  }
  
  lfs = ADCH;
   ADCSRA |= (1 << ADSC);              //ADC start
}
